# -*- coding: utf-8 -*-
"""02_agg.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZTlAjDQapF_f6dgGIQfiR4xWOOfRmNIp

Importing all the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
sns.set()

"""Loading the data"""

df=pd.read_csv('/content/drive/MyDrive/Sepsis Prediction/cleaned_data.csv')
df

df.info()

"""Aggregrating the data"""

sepsis_onset = df[df['SepsisLabel'] == 1].groupby('Patient_ID')['Hour'].min().reset_index()
sepsis_onset.rename(columns={'Hour': 'SepsisOnsetHour'}, inplace=True)

df = df.merge(sepsis_onset, on='Patient_ID', how='left')

df_filtered = df[
    (df['SepsisOnsetHour'].isna()) |
    (df['Hour'] <= df['SepsisOnsetHour'])
].copy()


df_filtered.drop(columns=['SepsisOnsetHour'], inplace=True)

agg_funcs = {
    'HR': ['mean', 'min', 'max', 'std'],
    'O2Sat': ['mean', 'min', 'max', 'std'],
    'Temp': ['mean', 'min', 'max', 'std'],
    'SBP': ['mean', 'min', 'max', 'std'],
    'MAP': ['mean', 'min', 'max', 'std'],
    'DBP': ['mean', 'min', 'max', 'std'],
    'Resp': ['mean', 'min', 'max', 'std'],
    'Age': 'first',
    'Gender': 'first',
    'Unit1': 'first',
    'HospAdmTime': 'first',
    'ICULOS': 'max',
    'SepsisLabel': 'max'

df_agg = df_filtered.groupby('Patient_ID').agg(agg_funcs)

df_agg.columns = ['_'.join(col).strip() if isinstance(col, tuple) else col for col in df_agg.columns]

df_agg.reset_index(inplace=True)

df_agg.head()

df_agg

"""Changing Column Names"""

df_agg.rename(columns={
    'Age_first': 'Age',
    'Gender_first': 'Gender',
    'Unit1_first': 'Unit1',
    'HospAdmTime_first': 'HospAdmTime',
    'ICULOS_max': 'ICULOS',
    'SepsisLabel_max': 'SepsisLabel'
}, inplace=True)

std_cols = [col for col in df_agg.columns if col.endswith('_std')]
df_agg[std_cols] = df_agg[std_cols].fillna(0)

df_agg.info()

"""Saving Aggregated Data"""

df_agg.to_csv('/content/drive/MyDrive/Sepsis Prediction/aggregated_data1.csv', index=False)

df_agg['SepsisLabel'].value_counts()