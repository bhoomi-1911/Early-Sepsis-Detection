# -*- coding: utf-8 -*-
"""01_eda.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mRn2RFocBgHNZrV1Yun0MrEP9iEdLWZp

Importing all the libraries
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
sns.set()

"""Loading the data"""

data=pd.read_csv('/content/drive/MyDrive/Sepsis Prediction/Dataset.csv')
data

data.shape

data.columns.tolist()

data.head()

data.tail()

data.info()

"""Missing Values Analysis"""

miss_pct=data.isna().mean().sort_values(ascending=False)*100
plt.figure(figsize=(15,15))
sns.barplot(x=miss_pct.index,y=miss_pct.values)
plt.xticks(rotation=90)
plt.ylabel('Percentage per missing column')
plt.title('Missing values per column')
plt.show()

"""Drop High Missing Columns"""

cols_to_drop = [
    "Bilirubin_direct",
    "Fibrinogen",
    "TroponinI",
    "Bilirubin_total",
    "Alkalinephos",
    "AST",
    "Lactate",
    "PTT",
    "SaO2",
    "EtCO2",
    "Phosphate",
    "HCO3",
    "Chloride",
    "BaseExcess",
    "PaCO2",
    "Calcium",
    "Platelets",
    "Creatinine",
    "Magnesium",
    "WBC",
    "BUN",
    "pH",
    "Hgb",
    "FiO2",
    "Hct",
    "Potassium",
    "Glucose"
]

data_without_nullcolumns = data.drop(columns=cols_to_drop)
data_without_nullcolumns.shape

data_without_nullcolumns.info()

data_without_nullcolumns

data_1=data_without_nullcolumns.copy()

data_1.describe()

"""Outliers Detection"""

cols=['HR','O2Sat','Temp','SBP','MAP','DBP','Resp']
plt.figure(figsize=(15,15))
for i,col in enumerate(cols):
  plt.subplot(2,4,i+1)
  sns.boxplot(data_1[col])
  plt.title(col)
plt.tight_layout()
plt.show()

"""Imputation"""

def impute_missing_values(data,column):
  for col in column:
    if col in data.columns:
      col_median=data[col].median()
      data[col].fillna(col_median,inplace=True)
  return data
vital_cols = ["HR", "O2Sat", "Temp", "SBP", "MAP", "DBP", "Resp"]
data_2=impute_missing_values(data_1,vital_cols)

data_2=data_2.drop(columns=['Unit2'])

print(data_2['Unit1'].unique())

mode_val=data_2['Unit1'].mode(dropna=True)[0]
mode_val
data_2['Unit1'] = data_2['Unit1'].fillna(mode_val)

data_2 = data_2.drop(columns=['Unnamed: 0'])

median_val = data_2['HospAdmTime'].median()
data_2['HospAdmTime'] = data_2['HospAdmTime'].fillna(median_val)

"""Clinical Capping"""

def cap_vitals_clinical(data):
    # Clinical caps for adult ICU patients
    caps = {
        "HR": (30, 220),       # Heart Rate
        "O2Sat": (50, 100),    # Oxygen Saturation (%)
        "Temp": (28, 43),      # Temperature (Â°C)
        "SBP": (50, 250),      # Systolic BP (mmHg)
        "MAP": (40, 180),      # Mean Arterial Pressure (mmHg)
        "DBP": (30, 150),      # Diastolic BP (mmHg)
        "Resp": (5, 60)        # Respiratory Rate (breaths/min)
    }

    for col, (low, high) in caps.items():
        if col in data.columns:
            data[col] = data[col].clip(lower=low, upper=high)

    return data

data_3=cap_vitals_clinical(data_2)

data_3.describe()

data_3['HospAdmTime'] = data_3['HospAdmTime'].clip(lower=0)

"""Saved Clean Dataset"""

data_3.to_csv('/content/drive/MyDrive/Sepsis Prediction/cleaned_data.csv', index=False)